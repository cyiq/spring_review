<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/aop 
                           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
       
     	<bean id="personDao" class="cyiq.spring.aop.xml.PersonDaoImpl"></bean>    
		<bean id="transaction" class="cyiq.spring.aop.xml.Transaction"></bean>
		<aop:config>
			<aop:pointcut expression="execution(* cyiq.spring.aop..*.*(..))" id="perform"/>
			<aop:aspect ref="transaction">
				<!-- 前置通知：目标方法调用之前调用的方法 -->
				<aop:before method="beginTransaction" pointcut-ref="perform"/>
				<!-- 后置通知：目标方法返回后执行的方法，如果目标方法报错，则after-returning方法不执行 -->
				<aop:after-returning method="commit" pointcut-ref="perform"/>
				<!-- 最终通知：最终执行的通知，必定会执行，类似finally -->
				<aop:after method="finallyMethod" pointcut-ref="perform"/>
				<!-- 异常通知：目标方法抛出异常后执行的通知 -->
				<aop:after-throwing method="exceptionMethod" throwing="e" pointcut-ref="perform"/>
				<!-- 环绕通知 -->
				<aop:around method="aroundMethod" arg-names="joinPoint" pointcut-ref="perform"/>
			</aop:aspect>
		</aop:config>
		       
</beans>